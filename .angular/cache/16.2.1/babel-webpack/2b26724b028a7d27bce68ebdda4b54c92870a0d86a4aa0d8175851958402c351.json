{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { InfoUserDto, StateModel, User } from 'src/app/models/TaskModel';\nimport { ActionsEnum } from 'src/app/models/EnumActions';\nexport let TaskListComponent = class TaskListComponent {\n  constructor(taskService, messageService, confirmationService, stateService) {\n    this.taskService = taskService;\n    this.messageService = messageService;\n    this.confirmationService = confirmationService;\n    this.stateService = stateService;\n    this.User = new User();\n    this.infoUserDto = new InfoUserDto();\n    this.token = \"\";\n    this.userVal = new User();\n    this.isLoger = false;\n    this.userList = [];\n    this.GetToken = user => {\n      this.taskService.getToken(user).subscribe(response => {\n        if (!response) return;\n        this.token = response.token;\n        this.taskService.getUserByMail(user, this.token).subscribe(infoUser => {\n          debugger;\n          if (!infoUser) return;\n          this.infoUserDto = infoUser.result;\n          this.isLoger = true;\n        });\n      });\n      this.messageService.add({\n        severity: this.token ? 'success' : 'error',\n        summary: this.token ? 'Completado' : 'error',\n        detail: this.token ? `Se ha logueado correctamente con ${this.infoUserDto.firstName} ${this.infoUserDto.lastName}` : \"El usuario no se encuentra registrado\",\n        life: 3001\n      });\n    };\n    this.getTaskList = token => {\n      this.taskService.getUserList(token).subscribe(response => {\n        this.userList = response.result || [];\n      });\n    };\n    this.getStatus = status => {\n      const first = status.substring(0, 1).toUpperCase();\n      switch (first) {\n        case \"C\":\n          return \"success\";\n          break;\n        case \"E\":\n          return \"warning\";\n          break;\n        case \"P\":\n          return \"danger\";\n          break;\n        default:\n          return \"danger\";\n          break;\n      }\n    };\n    this.Ingress = event => {\n      debugger;\n      if (event == null) return;\n      debugger;\n      this.userVal.email = this.User.email;\n      this.userVal.password = this.User.password;\n      this.GetToken(this.userVal);\n    };\n    this.editTask = task => {\n      // this.openDialog = true;\n      // this.isAdd = false;\n      // this.isEditTask = true;\n      // this.taskModel = task;\n    };\n    this.deleteTask = task => {\n      this.taskService.deleteTask(task, this.token).subscribe(response => {\n        if (!response) return;\n        const state = new StateModel();\n        state.key = task.id.toString();\n        state.action = ActionsEnum.DELETE;\n        state.value = task;\n        this.stateService.deleteData(state);\n        this.getTaskList(this.token);\n        this.messageService.add({\n          severity: response.isSuccessful ? 'success' : 'error',\n          summary: response.isSuccessful ? 'Completado' : 'error',\n          detail: response.isSuccessful ? `Se ha eliminado la tarea ${task.title}` : response.errorMessage,\n          life: 3001\n        });\n      });\n    };\n    this.hideDialog = event => {\n      if (event == null) return;\n      this.getTaskList(this.token);\n      // this.openDialog = (event.openDialog || false);\n    };\n\n    this.applyFilterGlobal = ($event, stringVal) => {\n      // const obj = this.dt.filter(($event.target as HTMLInputElement).value, 'dev', stringVal);\n      // return obj;\n    };\n    this.isLoger = false;\n  }\n  ngOnInit() {}\n  deleteTaskConfirm(data) {\n    this.confirmationService.confirm({\n      message: 'Â¿Esta seguro que desea eliminar?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        const {\n          id\n        } = data;\n        this.deleteTask(data);\n        // this.taskModel = new TaskModel();\n      }\n    });\n  }\n};\n\n__decorate([Input()], TaskListComponent.prototype, \"User\", void 0);\nTaskListComponent = __decorate([Component({\n  selector: 'ta-app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})], TaskListComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
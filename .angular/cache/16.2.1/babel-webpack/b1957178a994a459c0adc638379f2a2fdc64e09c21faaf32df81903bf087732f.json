{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ActionsEnum } from 'src/app/models/EnumActions';\nimport { ResponseModelTask } from 'src/app/models/ResponseModel';\nimport { StateModel, User, UserDto } from 'src/app/models/TaskModel';\nexport let TaskComponent = class TaskComponent {\n  constructor(userService, messageService, stateService) {\n    this.userService = userService;\n    this.messageService = messageService;\n    this.stateService = stateService;\n    this.closeDialog = new EventEmitter();\n    this.userDtol = new UserDto();\n    this.openDialog = false;\n    this.isEdit = false;\n    this.isAdd = false;\n    this.statusesRole = [];\n    this.tipeDoc = [];\n    this.statuses = [];\n    this.validForm = true;\n    this.token = \"\";\n    this.user = new User();\n    this.validateForm = () => {\n      // this.validForm = (this.userDtol.developer || '').length > 0 &&\n      //   (this.userDtol.title || '').length > 0 &&\n      //   (this.userDtol.developer || '').length > 0 ? true : false;\n    };\n    this.saveTask = event => {\n      if (event == null) return;\n      this.validateForm();\n      if (!this.validForm) return;\n      this.postSaveTask(this.userDtol);\n    };\n    this.hideDialog = () => {\n      let model = new ResponseModelTask();\n      model.openDialog = false;\n      debugger;\n      this.closeDialog.emit(model);\n    };\n    this.postSaveTask = user => {\n      user.id = this.generateUuid();\n      debugger;\n      this.userService.saveUser(user, this.token).subscribe(response => {\n        debugger;\n        if (!response) return;\n        const state = new StateModel();\n        state.action = ActionsEnum.INSERT;\n        state.value = user;\n        this.stateService.setData(state);\n        this.messageService.add({\n          severity: response.isSuccessful ? 'success' : 'error',\n          summary: response.isSuccessful ? 'Completado' : 'error',\n          detail: response.isSuccessful ? `Se ha agregado el usuario ${user.email}` : response.errorMessage\n        });\n        this.hideDialog();\n      });\n    };\n    this.statusesRole = [{\n      value: '8013CFE1-B7D2-4795-A2FE-B21558C21C9F',\n      label: \"Administrador\",\n      color: 'danger'\n    }, {\n      value: '2A5591A4-68BA-4AC3-A6D2-447E1D70ABA7',\n      label: \"Default\",\n      color: 'warning'\n    }, {\n      value: '8013CFE1-B7D2-4795-A2FE-B21558C21C9F',\n      label: \"El Inge que toma cerveza\",\n      color: 'success'\n    }];\n    this.statuses = [{\n      value: false,\n      label: \"Inactivo\",\n      color: 'danger'\n    }, {\n      value: true,\n      label: \"Activo\",\n      color: 'success'\n    }];\n    this.tipeDoc = [{\n      value: \"CC\",\n      label: \"Cédula\",\n      color: 'danger'\n    }, {\n      value: \"CE\",\n      label: \"Cédula de extranjería\",\n      color: 'success'\n    }, {\n      value: \"PA\",\n      label: \"Pasaporte\",\n      color: 'danger'\n    }];\n  }\n  ngOnInit() {}\n  generateUuid() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n        v = c == \"x\" ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n};\n__decorate([Output()], TaskComponent.prototype, \"closeDialog\", void 0);\n__decorate([Input()], TaskComponent.prototype, \"userDtol\", void 0);\n__decorate([Input()], TaskComponent.prototype, \"openDialog\", void 0);\n__decorate([Input()], TaskComponent.prototype, \"isEdit\", void 0);\n__decorate([Input()], TaskComponent.prototype, \"isAdd\", void 0);\n__decorate([Input()], TaskComponent.prototype, \"token\", void 0);\nTaskComponent = __decorate([Component({\n  selector: 'ta-app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})], TaskComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
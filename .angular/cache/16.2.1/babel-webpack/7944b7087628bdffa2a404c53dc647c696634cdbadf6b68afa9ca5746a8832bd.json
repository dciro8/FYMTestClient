{"ast":null,"code":"var _class;\nimport { InfoUserDto, StateModel, User } from 'src/app/models/TaskModel';\nimport { ActionsEnum } from 'src/app/models/EnumActions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/taskService\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"src/app/services/stateService\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"primeng/table\";\nimport * as i6 from \"primeng/toast\";\nimport * as i7 from \"primeng/toolbar\";\nimport * as i8 from \"primeng/button\";\nimport * as i9 from \"@angular/forms\";\nfunction TaskListComponent_div_3_ng_template_3_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_div_3_ng_template_3_ng_template_15_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r4.Ingress($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskListComponent_div_3_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"p\", 7);\n    i0.ɵɵtext(2, \"Test value\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"span\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 9)(5, \"span\");\n    i0.ɵɵtext(6, \"Usuario\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 10)(8, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskListComponent_div_3_ng_template_3_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.User.email = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"span\");\n    i0.ɵɵtext(10, \"Contrase\\u00F1a\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 10)(12, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskListComponent_div_3_ng_template_3_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.User.password = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(13, \"p-toast\");\n    i0.ɵɵelementStart(14, \"p-toolbar\", 13);\n    i0.ɵɵtemplate(15, TaskListComponent_div_3_ng_template_3_ng_template_15_Template, 1, 0, \"ng-template\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.User.email);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.User.password);\n  }\n}\nconst _c0 = function () {\n  return {\n    \"min-width\": \"75rem\"\n  };\n};\nfunction TaskListComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p-table\", 3, 4);\n    i0.ɵɵtemplate(3, TaskListComponent_div_3_ng_template_3_Template, 16, 2, \"ng-template\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"rows\", 10)(\"paginator\", true)(\"tableStyle\", i0.ɵɵpureFunction0(4, _c0))(\"rowHover\", true);\n  }\n}\nexport class TaskListComponent {\n  constructor(taskService, messageService, confirmationService, stateService) {\n    this.taskService = taskService;\n    this.messageService = messageService;\n    this.confirmationService = confirmationService;\n    this.stateService = stateService;\n    this.User = new User();\n    this.infoUserDto = new InfoUserDto();\n    this.token = \"\";\n    this.userVal = new User();\n    this.isLoger = false;\n    this.GetToken = user => {\n      this.taskService.getToken(user).subscribe(response => {\n        if (!response) return;\n        this.token = response.token;\n        this.taskService.getUserByMail(user, this.token).subscribe(infoUser => {\n          debugger;\n          if (!infoUser) return;\n          this.infoUserDto = infoUser.result;\n        });\n      });\n      if (this.infoUserDto) {\n        this.messageService.add({\n          severity: this.token ? 'success' : 'error',\n          summary: this.token ? 'Completado' : 'error',\n          detail: this.token ? `Se ha logueado correctamente con ${this.infoUserDto.firstName} ${this.infoUserDto.lastName}` : \"El usuario no se encuentra registrado\",\n          life: 3001\n        });\n      }\n    };\n    this.getTaskList = token => {\n      this.taskService.getTaskList(token).subscribe(response => {\n        // this.taskList = (response.result || []);\n      });\n    };\n    this.getStatus = status => {\n      const first = status.substring(0, 1).toUpperCase();\n      switch (first) {\n        case \"C\":\n          return \"success\";\n          break;\n        case \"E\":\n          return \"warning\";\n          break;\n        case \"P\":\n          return \"danger\";\n          break;\n        default:\n          return \"danger\";\n          break;\n      }\n    };\n    this.Ingress = event => {\n      debugger;\n      if (event == null) return;\n      debugger;\n      this.userVal.email = this.User.email;\n      this.userVal.password = this.User.password;\n      this.GetToken(this.userVal);\n    };\n    this.editTask = task => {\n      // this.openDialog = true;\n      // this.isAdd = false;\n      // this.isEditTask = true;\n      // this.taskModel = task;\n    };\n    this.deleteTask = task => {\n      this.taskService.deleteTask(task, this.token).subscribe(response => {\n        if (!response) return;\n        const state = new StateModel();\n        state.key = task.id.toString();\n        state.action = ActionsEnum.DELETE;\n        state.value = task;\n        this.stateService.deleteData(state);\n        this.getTaskList(this.token);\n        this.messageService.add({\n          severity: response.isSuccessful ? 'success' : 'error',\n          summary: response.isSuccessful ? 'Completado' : 'error',\n          detail: response.isSuccessful ? `Se ha eliminado la tarea ${task.title}` : response.errorMessage,\n          life: 3001\n        });\n      });\n    };\n    this.hideDialog = event => {\n      if (event == null) return;\n      this.getTaskList(this.token);\n      // this.openDialog = (event.openDialog || false);\n    };\n\n    this.applyFilterGlobal = ($event, stringVal) => {\n      // const obj = this.dt.filter(($event.target as HTMLInputElement).value, 'dev', stringVal);\n      // return obj;\n    };\n  }\n  ngOnInit() {}\n  deleteTaskConfirm(data) {\n    this.confirmationService.confirm({\n      message: '¿Esta seguro que desea eliminar?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        const {\n          id\n        } = data;\n        this.deleteTask(data);\n        // this.taskModel = new TaskModel();\n      }\n    });\n  }\n}\n_class = TaskListComponent;\n_class.ɵfac = function TaskListComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.taskService), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i2.ConfirmationService), i0.ɵɵdirectiveInject(i3.stateService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"ta-app-task-list\"]],\n  inputs: {\n    User: \"User\"\n  },\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"\", 2, \"display\", \"grid\", \"margin\", \"0px\", \"justify-content\", \"center\"], [2, \"padding\", \"10px\"], [4, \"ngIf\"], [\"dataKey\", \"id\", 1, \"StandardTable\", 3, \"rows\", \"paginator\", \"tableStyle\", \"rowHover\"], [\"dt\", \"\"], [\"pTemplate\", \"caption\", \"style\", \"align-content: center;\"], [1, \"table-header\", 2, \"text-align\", \"center\"], [2, \"margin\", \"0px\", \"font-size\", \"20px\"], [1, \"p-input-icon-left\"], [2, \"display\", \"grid\", \"gap\", \"10px\", \"padding\", \"20px\"], [1, \"inputbox\"], [\"type\", \"text\", \"pInputText\", \"\", \"maxlength\", \"20\", \"id\", \"user\", \"required\", \"\", \"autofocus\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"maxlength\", \"20\", \"pInputText\", \"\", \"id\", \"password\", \"required\", \"\", \"autofocus\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"styleClass\", \"mb-4 gap-2\"], [\"pTemplate\", \"left\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Ingresar\", \"icon\", \"pi pi-check\", 1, \"p-button-success\", \"mr-2\", 3, \"click\"]],\n  template: function TaskListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"article\", 1);\n      i0.ɵɵelement(2, \"p-toast\");\n      i0.ɵɵtemplate(3, TaskListComponent_div_3_Template, 4, 5, \"div\", 2);\n      i0.ɵɵelement(4, \"p-toast\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoger);\n    }\n  },\n  dependencies: [i4.NgIf, i5.Table, i2.PrimeTemplate, i6.Toast, i7.Toolbar, i8.ButtonDirective, i9.DefaultValueAccessor, i9.NgControlStatus, i9.RequiredValidator, i9.MaxLengthValidator, i9.NgModel]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
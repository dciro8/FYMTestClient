{"ast":null,"code":"var _class;\nimport { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// import { map } from \"rxjs\";\n// import 'rxjs/add/operator/catch';\nexport class userService {\n  constructor(http) {\n    this.http = http;\n    this.URL_Str = 'https://localhost:7109/api/';\n  }\n  getToken(user) {\n    debugger;\n    // return this.http.post<Token>(this.URL_Str + \"Autentications/Validate\", user)\n    // .pipe(\n    //   map(val => {\n    //     debugger;\n    //     let result = val;\n    //       return result\n    //     }),\n    // );\n    // return this.http.post<Token>(this.URL_Str + \"Autentications/Validate\", user)\n    // .map((response: Response) => {\n    //     let runs = response.json();\n    //     return runs;\n    // })\n    // .catch(e => {\n    //     if (e.status === 401) {\n    //         return Observable.throw('Unauthorized');\n    //     }\n    //     // do any other checking for statuses here\n    // });\n    return this.http.post(this.URL_Str + \"Autentications/Validate\", user).subscribe(runs => {\n      let runss = runs;\n      debugger;\n    }, err => {\n      if (err === 'Unauthorized') {}\n    });\n  }\n  getUserList(token) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n    return this.http.get(this.URL_Str + \"Users/GetAll\", {\n      headers: headers\n    });\n  }\n  getRolList(token) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n    return this.http.get(this.URL_Str + \"Roles/GetRoleAll\", {\n      headers: headers\n    });\n  }\n  getUserByMail(user, token) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n    return this.http.get(this.URL_Str + \"Users?email=\" + user.email + \"&password=\" + user.password, {\n      headers: headers\n    });\n  }\n  saveUser(objDto, token) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n    return this.http.post(this.URL_Str + \"Users\", objDto, {\n      headers: headers\n    });\n  }\n}\n_class = userService;\n_class.ɵfac = function userService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: \"root\"\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
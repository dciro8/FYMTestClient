{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { InfoUserDto, User } from 'src/app/models/TaskModel';\nexport let TaskListComponent = class TaskListComponent {\n  constructor(userService, messageService) {\n    this.userService = userService;\n    this.messageService = messageService;\n    this.User = new User();\n    this.infoUserDto = new InfoUserDto();\n    this.token = \"\";\n    this.userVal = new User();\n    this.isLoger = false;\n    this.userList = [];\n    this.infoRoleDto = [];\n    this.openDialog = false;\n    this.isAdd = false;\n    this.isDisabled = false;\n    this.GetToken = user => {\n      this.userService.getToken(user).subscribe(response => {\n        debugger;\n        if (!response) {\n          debugger;\n          if (this.token == \"\") {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'error',\n              detail: \"El usuario no se encuentra registrado\",\n              life: 3001\n            });\n          }\n          return;\n        }\n        ;\n        this.token = response.token;\n        this.userService.getUserByMail(user, this.token).subscribe(infoUser => {\n          if (!infoUser) return;\n          this.infoUserDto = infoUser.result;\n          if (this.infoUserDto.codeRole != \"ADM\") {\n            this.isDisabled = true;\n          }\n          this.isLoger = true;\n          this.messageService.add({\n            severity: this.token ? 'success' : 'error',\n            summary: this.token ? 'Completado' : 'error',\n            detail: this.token ? `Se logueado con ${this.infoUserDto.firstName} ${this.infoUserDto.lastName}` : \"El usuario no se encuentra registrado\",\n            life: 3001\n          });\n        });\n        this.getUserList(this.token);\n        this.getRoleList(this.token);\n      });\n    };\n    this.getUserList = token => {\n      this.userService.getUserList(token).subscribe(response => {\n        this.userList = response.result || [];\n      });\n    };\n    this.getRoleList = token => {\n      this.userService.getRolList(token).subscribe(response => {\n        this.infoRoleDto = response.result || [];\n      });\n    };\n    this.getStatus = status => {\n      switch (status) {\n        case true:\n          return \"success\";\n          break;\n        case false:\n          return \"danger\";\n          break;\n        default:\n          return \"danger\";\n          break;\n      }\n    };\n    this.addUser = () => {\n      this.openDialog = true;\n      this.isAdd = true;\n    };\n    this.Ingress = event => {\n      if (event == null) return;\n      this.userVal.email = this.User.email;\n      this.userVal.password = this.User.password;\n      this.GetToken(this.userVal);\n    };\n    this.hideDialog = event => {\n      if (event == null) return;\n      this.getUserList(this.token);\n      this.openDialog = event.openDialog || false;\n    };\n    this.isLoger = false;\n  }\n  ngOnInit() {}\n};\n__decorate([Input()], TaskListComponent.prototype, \"User\", void 0);\nTaskListComponent = __decorate([Component({\n  selector: 'ta-app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})], TaskListComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}